{"head":{"title":"How to use configure Statinamic","description":"The simplest and easy way to configure Statinamic is by using updating\nthe package.json where you can tweak some built-in features.\n\nHere is…"},"body":"<p>The simplest and easy way to configure Statinamic is by using updating\nthe <code>package.json</code> where you can tweak some built-in features.</p>\n<p>Here is a commented <code>package.json</code> with only the interesting parts\n(with default values).</p>\n<pre><code class=\"language-js\">{\n  <span class=\"hljs-comment\">// tell npm that there is a lot of field that you don't need</span>\n  <span class=\"hljs-comment\">// and prevent publishing this folder as a npm package</span>\n  <span class=\"hljs-string\">\"private\"</span>: <span class=\"hljs-literal\">true</span>,\n\n  <span class=\"hljs-comment\">// npm need a 'dashed-name' (optional?)</span>\n  <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"YOUR-NAME-that-might-be-used-in-some-title-tags\"</span>,\n\n  <span class=\"hljs-comment\">// statinamic use the default package.json homepage</span>\n  <span class=\"hljs-comment\">// ** it's a required field to adjust url for production build **</span>\n  <span class=\"hljs-string\">\"homepage\"</span>: <span class=\"hljs-string\">\"http://YOUR.HOSTNAME/your-base-url-if-needed/\"</span>,\n\n  <span class=\"hljs-comment\">// here is the script part, which the ones related to Statinamic</span>\n  <span class=\"hljs-comment\">// you can add more like linting and stuff like that :)</span>\n  <span class=\"hljs-comment\">// BABEL_DISABLE_CACHE is required to run webpack loaders correctly in Node</span>\n  <span class=\"hljs-comment\">// BABEL_ENV is vital and helps run components code universally</span>\n  <span class=\"hljs-comment\">// DEBUG=statinamic:* is optional (and mainly for development)</span>\n  <span class=\"hljs-string\">\"scripts\"</span>: {\n    <span class=\"hljs-string\">\"statinamic\"</span>: <span class=\"hljs-string\">\"cross-env BABEL_DISABLE_CACHE=1 BABEL_ENV=statinamic DEBUG=statinamic:* babel-node scripts/build\"</span>,\n    <span class=\"hljs-string\">\"start\"</span>: <span class=\"hljs-string\">\"npm run statinamic -- --server --open --dev\"</span>,\n    <span class=\"hljs-string\">\"build\"</span>: <span class=\"hljs-string\">\"npm run statinamic -- --static --production\"</span>,\n  },\n\n  <span class=\"hljs-comment\">// Statinamic core section (default values)</span>\n  <span class=\"hljs-string\">\"statinamic\"</span>: {\n    <span class=\"hljs-comment\">// current working directory</span>\n    <span class=\"hljs-comment\">// you should not need to specify this, but who knows what you will do with</span>\n    <span class=\"hljs-comment\">// it :D</span>\n    <span class=\"hljs-string\">\"cwd\"</span>: process.cwd(),\n\n    <span class=\"hljs-comment\">// Where your markdown files are</span>\n    <span class=\"hljs-string\">\"source\"</span>: <span class=\"hljs-string\">\"content\"</span>,\n\n    <span class=\"hljs-comment\">// Where to put the build files</span>\n    <span class=\"hljs-string\">\"destination\"</span>: <span class=\"hljs-string\">\"dist\"</span>,\n\n    <span class=\"hljs-comment\">// where you have your static assets</span>\n    <span class=\"hljs-comment\">// you have multiple way to configure this field:</span>\n    <span class=\"hljs-comment\">// - simple string (relative to source folder)</span>\n    <span class=\"hljs-comment\">// - object with path (local path, relative to source) and route in web</span>\n    <span class=\"hljs-comment\">// - a boolean to disable</span>\n    <span class=\"hljs-string\">\"assets\"</span>: <span class=\"hljs-string\">\"assets\"</span>,\n\n    <span class=\"hljs-comment\">// CNAME file generated from `homepage` hostname in the destination folder</span>\n    <span class=\"hljs-comment\">// use `true` to enable</span>\n    <span class=\"hljs-string\">\"CNAME\"</span>: <span class=\"hljs-literal\">false</span>,\n\n    <span class=\"hljs-comment\">// .nojekyll file to avoid GitHub wasting time to run his default engine</span>\n    <span class=\"hljs-comment\">//   (and at the same time, allow filename prefixed by an `_`)</span>\n    <span class=\"hljs-string\">\"nojekyll\"</span>: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">// host for development</span>\n    <span class=\"hljs-string\">\"devHost\"</span>: <span class=\"hljs-string\">\"0.0.0.0\"</span>,\n\n    <span class=\"hljs-comment\">// port for development</span>\n    <span class=\"hljs-string\">\"devPort\"</span>: <span class=\"hljs-string\">\"3000\"</span>,\n\n    <span class=\"hljs-comment\">// flag to add information during development</span>\n    <span class=\"hljs-string\">\"verbose\"</span>: <span class=\"hljs-literal\">false</span>,\n\n    <span class=\"hljs-comment\">// open a new tab when start dev server</span>\n    <span class=\"hljs-string\">\"open\"</span>: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">// generate appcache manifest for offline access</span>\n    <span class=\"hljs-comment\">// See docs/advanced/offline-browsing for more information</span>\n    <span class=\"hljs-string\">\"appcache\"</span>: <span class=\"hljs-literal\">true</span>\n  },\n\n  <span class=\"hljs-comment\">// That's because es5 is not enough</span>\n  <span class=\"hljs-string\">\"babel\"</span>: {\n    <span class=\"hljs-string\">\"presets\"</span>: [\n      <span class=\"hljs-string\">\"react\"</span>,\n      <span class=\"hljs-string\">\"es2015\"</span>,\n      <span class=\"hljs-string\">\"stage-1\"</span>\n    ],\n    <span class=\"hljs-string\">\"env\"</span>: {\n      <span class=\"hljs-comment\">// this section is very important and must be (for now) defined here</span>\n      <span class=\"hljs-string\">\"statinamic\"</span>: {\n        <span class=\"hljs-string\">\"plugins\"</span>: [\n          [\n            <span class=\"hljs-string\">\"babel-plugin-webpack-loaders\"</span>,\n            {\n              <span class=\"hljs-string\">\"config\"</span>: <span class=\"hljs-string\">\"./scripts/webpack.config.babel.js\"</span>,\n              <span class=\"hljs-string\">\"verbose\"</span>: <span class=\"hljs-literal\">false</span>\n            }\n          ]\n        ]\n      }\n    }\n  },\n\n  <span class=\"hljs-comment\">// linting prevent errors</span>\n  <span class=\"hljs-comment\">// See 'Good practices' section.</span>\n  <span class=\"hljs-string\">\"eslintConfig\"</span>: {\n    <span class=\"hljs-comment\">// ...</span>\n  },\n  <span class=\"hljs-string\">\"stylelint\"</span>: {\n    <span class=\"hljs-comment\">// ...</span>\n  }\n}</code></pre>\n<h2 id=\"notes\"><a class=\"markdownIt-Anchor\" href=\"#notes\">#</a> Notes</h2>\n<ul>\n<li>You can use the <code>package.json</code> file to store most static data you want to like\nsome tracker id (eg: Google Analytics, Disqus…).</li>\n<li>You can override every option as a cli flag/option (eg: <code>--dev-port=4000</code>).</li>\n</ul>\n<h2 id=\"advanced-configuration\"><a class=\"markdownIt-Anchor\" href=\"#advanced-configuration\">#</a> Advanced configuration</h2>\n<p>The part you can tweak in the <code>package.json</code> is just a piece of the iceberg.\nThere is a lot you can do depending on your need.</p>\n<p>If you want to change stuff like CSS or JS preprocessors or linters, you might\nwant to edit <em>webpack configurations</em>.</p>\n<p>The default boilerplate store 2 configurations:</p>\n<ul>\n<li><code>scripts/webpack.config.babel.js</code> used for the Universal code,</li>\n<li><code>scripts/webpack.config.client.js</code> used <em>only</em> for the client code.</li>\n</ul>\n<p>You can open those 2 files and tweak the parts you need or add some missing\npieces.</p>\n<p><em>Be sure to take a look to <a href=\"http://webpack.github.io/docs/\">webpack</a>.</em></p>\n<p><strong>We might add some commons changes you would like to make here. Feel free to\nopen issues if you don’t know how to make some changes.</strong></p>\n","rawBody":"\nThe simplest and easy way to configure Statinamic is by using updating\nthe ``package.json`` where you can tweak some built-in features.\n\nHere is a commented ``package.json`` with only the interesting parts\n(with default values).\n\n```js\n{\n  // tell npm that there is a lot of field that you don't need\n  // and prevent publishing this folder as a npm package\n  \"private\": true,\n\n  // npm need a 'dashed-name' (optional?)\n  \"name\": \"YOUR-NAME-that-might-be-used-in-some-title-tags\",\n\n  // statinamic use the default package.json homepage\n  // ** it's a required field to adjust url for production build **\n  \"homepage\": \"http://YOUR.HOSTNAME/your-base-url-if-needed/\",\n\n  // here is the script part, which the ones related to Statinamic\n  // you can add more like linting and stuff like that :)\n  // BABEL_DISABLE_CACHE is required to run webpack loaders correctly in Node\n  // BABEL_ENV is vital and helps run components code universally\n  // DEBUG=statinamic:* is optional (and mainly for development)\n  \"scripts\": {\n    \"statinamic\": \"cross-env BABEL_DISABLE_CACHE=1 BABEL_ENV=statinamic DEBUG=statinamic:* babel-node scripts/build\",\n    \"start\": \"npm run statinamic -- --server --open --dev\",\n    \"build\": \"npm run statinamic -- --static --production\",\n  },\n\n  // Statinamic core section (default values)\n  \"statinamic\": {\n    // current working directory\n    // you should not need to specify this, but who knows what you will do with\n    // it :D\n    \"cwd\": process.cwd(),\n\n    // Where your markdown files are\n    \"source\": \"content\",\n\n    // Where to put the build files\n    \"destination\": \"dist\",\n\n    // where you have your static assets\n    // you have multiple way to configure this field:\n    // - simple string (relative to source folder)\n    // - object with path (local path, relative to source) and route in web\n    // - a boolean to disable\n    \"assets\": \"assets\",\n\n    // CNAME file generated from `homepage` hostname in the destination folder\n    // use `true` to enable\n    \"CNAME\": false,\n\n    // .nojekyll file to avoid GitHub wasting time to run his default engine\n    //   (and at the same time, allow filename prefixed by an `_`)\n    \"nojekyll\": true,\n\n    // host for development\n    \"devHost\": \"0.0.0.0\",\n\n    // port for development\n    \"devPort\": \"3000\",\n\n    // flag to add information during development\n    \"verbose\": false,\n\n    // open a new tab when start dev server\n    \"open\": true,\n\n    // generate appcache manifest for offline access\n    // See docs/advanced/offline-browsing for more information\n    \"appcache\": true\n  },\n\n  // That's because es5 is not enough\n  \"babel\": {\n    \"presets\": [\n      \"react\",\n      \"es2015\",\n      \"stage-1\"\n    ],\n    \"env\": {\n      // this section is very important and must be (for now) defined here\n      \"statinamic\": {\n        \"plugins\": [\n          [\n            \"babel-plugin-webpack-loaders\",\n            {\n              \"config\": \"./scripts/webpack.config.babel.js\",\n              \"verbose\": false\n            }\n          ]\n        ]\n      }\n    }\n  },\n\n  // linting prevent errors\n  // See 'Good practices' section.\n  \"eslintConfig\": {\n    // ...\n  },\n  \"stylelint\": {\n    // ...\n  }\n}\n```\n\n## Notes\n\n- You can use the ``package.json`` file to store most static data you want to like\n  some tracker id (eg: Google Analytics, Disqus...).\n- You can override every option as a cli flag/option (eg: ``--dev-port=4000``).\n\n## Advanced configuration\n\nThe part you can tweak in the ``package.json`` is just a piece of the iceberg.\nThere is a lot you can do depending on your need.\n\nIf you want to change stuff like CSS or JS preprocessors or linters, you might\nwant to edit _webpack configurations_.\n\nThe default boilerplate store 2 configurations:\n\n- ``scripts/webpack.config.babel.js`` used for the Universal code,\n- ``scripts/webpack.config.client.js`` used *only* for the client code.\n\nYou can open those 2 files and tweak the parts you need or add some missing\npieces.\n\n_Be sure to take a look to [webpack](http://webpack.github.io/docs/)._\n\n**We might add some commons changes you would like to make here. Feel free to\nopen issues if you don't know how to make some changes.**\n","raw":"---\ntitle: How to use configure Statinamic\n---\n\nThe simplest and easy way to configure Statinamic is by using updating\nthe ``package.json`` where you can tweak some built-in features.\n\nHere is a commented ``package.json`` with only the interesting parts\n(with default values).\n\n```js\n{\n  // tell npm that there is a lot of field that you don't need\n  // and prevent publishing this folder as a npm package\n  \"private\": true,\n\n  // npm need a 'dashed-name' (optional?)\n  \"name\": \"YOUR-NAME-that-might-be-used-in-some-title-tags\",\n\n  // statinamic use the default package.json homepage\n  // ** it's a required field to adjust url for production build **\n  \"homepage\": \"http://YOUR.HOSTNAME/your-base-url-if-needed/\",\n\n  // here is the script part, which the ones related to Statinamic\n  // you can add more like linting and stuff like that :)\n  // BABEL_DISABLE_CACHE is required to run webpack loaders correctly in Node\n  // BABEL_ENV is vital and helps run components code universally\n  // DEBUG=statinamic:* is optional (and mainly for development)\n  \"scripts\": {\n    \"statinamic\": \"cross-env BABEL_DISABLE_CACHE=1 BABEL_ENV=statinamic DEBUG=statinamic:* babel-node scripts/build\",\n    \"start\": \"npm run statinamic -- --server --open --dev\",\n    \"build\": \"npm run statinamic -- --static --production\",\n  },\n\n  // Statinamic core section (default values)\n  \"statinamic\": {\n    // current working directory\n    // you should not need to specify this, but who knows what you will do with\n    // it :D\n    \"cwd\": process.cwd(),\n\n    // Where your markdown files are\n    \"source\": \"content\",\n\n    // Where to put the build files\n    \"destination\": \"dist\",\n\n    // where you have your static assets\n    // you have multiple way to configure this field:\n    // - simple string (relative to source folder)\n    // - object with path (local path, relative to source) and route in web\n    // - a boolean to disable\n    \"assets\": \"assets\",\n\n    // CNAME file generated from `homepage` hostname in the destination folder\n    // use `true` to enable\n    \"CNAME\": false,\n\n    // .nojekyll file to avoid GitHub wasting time to run his default engine\n    //   (and at the same time, allow filename prefixed by an `_`)\n    \"nojekyll\": true,\n\n    // host for development\n    \"devHost\": \"0.0.0.0\",\n\n    // port for development\n    \"devPort\": \"3000\",\n\n    // flag to add information during development\n    \"verbose\": false,\n\n    // open a new tab when start dev server\n    \"open\": true,\n\n    // generate appcache manifest for offline access\n    // See docs/advanced/offline-browsing for more information\n    \"appcache\": true\n  },\n\n  // That's because es5 is not enough\n  \"babel\": {\n    \"presets\": [\n      \"react\",\n      \"es2015\",\n      \"stage-1\"\n    ],\n    \"env\": {\n      // this section is very important and must be (for now) defined here\n      \"statinamic\": {\n        \"plugins\": [\n          [\n            \"babel-plugin-webpack-loaders\",\n            {\n              \"config\": \"./scripts/webpack.config.babel.js\",\n              \"verbose\": false\n            }\n          ]\n        ]\n      }\n    }\n  },\n\n  // linting prevent errors\n  // See 'Good practices' section.\n  \"eslintConfig\": {\n    // ...\n  },\n  \"stylelint\": {\n    // ...\n  }\n}\n```\n\n## Notes\n\n- You can use the ``package.json`` file to store most static data you want to like\n  some tracker id (eg: Google Analytics, Disqus...).\n- You can override every option as a cli flag/option (eg: ``--dev-port=4000``).\n\n## Advanced configuration\n\nThe part you can tweak in the ``package.json`` is just a piece of the iceberg.\nThere is a lot you can do depending on your need.\n\nIf you want to change stuff like CSS or JS preprocessors or linters, you might\nwant to edit _webpack configurations_.\n\nThe default boilerplate store 2 configurations:\n\n- ``scripts/webpack.config.babel.js`` used for the Universal code,\n- ``scripts/webpack.config.client.js`` used *only* for the client code.\n\nYou can open those 2 files and tweak the parts you need or add some missing\npieces.\n\n_Be sure to take a look to [webpack](http://webpack.github.io/docs/)._\n\n**We might add some commons changes you would like to make here. Feel free to\nopen issues if you don't know how to make some changes.**\n","__filename":"docs/usage/configuration.md","__url":"/docs/usage/configuration/","__resourceUrl":"/docs/usage/configuration/index.html","__dataUrl":"/docs/usage/configuration/index.html.7b8f12b439aadf511e71e094920abde5.json"}