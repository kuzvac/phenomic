{"head":{"title":"How to use Collections in Statinamic","incomplete":true,"description":"By default, Statinamic provides 2 things to help you work with collections:\n\nit creates a file that contains all page metadata in a uniqueâ€¦"},"body":"<p>By default, Statinamic provides 2 things to help you work with collections:</p>\n<ul>\n<li>it creates a file that contains all page metadata in a unique collection,</li>\n<li>it provides a helper that helps you filter/sort/limit the collection.</li>\n</ul>\n<h2 id=\"collection-file\"><a class=\"markdownIt-Anchor\" href=\"#collection-file\">#</a> Collection file</h2>\n<p>Here is a simple collection example; note that the metadata defines the\nadditional fields <code>__filename</code> &amp; <code>__url</code>.</p>\n<pre><code class=\"language-json\">[\n  {\n    \"<span class=\"hljs-attribute\">__filename</span>\": <span class=\"hljs-value\"><span class=\"hljs-string\">\"index.md\"</span></span>,\n    \"<span class=\"hljs-attribute\">__url</span>\": <span class=\"hljs-value\"><span class=\"hljs-string\">\"/\"</span></span>,\n    \"<span class=\"hljs-attribute\">title</span>\": <span class=\"hljs-value\"><span class=\"hljs-string\">\"Awesome Website\"</span>\n  </span>},\n  {\n    \"<span class=\"hljs-attribute\">__filename</span>\": <span class=\"hljs-value\"><span class=\"hljs-string\">\"blog/index.md\"</span></span>,\n    \"<span class=\"hljs-attribute\">__url</span>\": <span class=\"hljs-value\"><span class=\"hljs-string\">\"/blog/\"</span></span>,\n    \"<span class=\"hljs-attribute\">title</span>\": <span class=\"hljs-value\"><span class=\"hljs-string\">\"Awesome blog\"</span>\n  </span>},\n  {\n    \"<span class=\"hljs-attribute\">__filename</span>\": <span class=\"hljs-value\"><span class=\"hljs-string\">\"blog/halloween.md\"</span></span>,\n    \"<span class=\"hljs-attribute\">__url</span>\": <span class=\"hljs-value\"><span class=\"hljs-string\">\"/blog/halloween/\"</span></span>,\n    \"<span class=\"hljs-attribute\">title</span>\": <span class=\"hljs-value\"><span class=\"hljs-string\">\"Awesome Halloween blog post\"</span></span>,\n    \"<span class=\"hljs-attribute\">layout</span>\": <span class=\"hljs-value\"><span class=\"hljs-string\">\"Post\"</span></span>,\n    \"<span class=\"hljs-attribute\">date</span>\": <span class=\"hljs-value\"><span class=\"hljs-string\">\"2015-10-31\"</span>\n  </span>},\n  {\n    \"<span class=\"hljs-attribute\">__filename</span>\": <span class=\"hljs-value\"><span class=\"hljs-string\">\"blog/xmas.md\"</span></span>,\n    \"<span class=\"hljs-attribute\">__url</span>\": <span class=\"hljs-value\"><span class=\"hljs-string\">\"/blog/xmas/\"</span></span>,\n    \"<span class=\"hljs-attribute\">title</span>\": <span class=\"hljs-value\"><span class=\"hljs-string\">\"Awesome Christmas blog post\"</span></span>,\n    \"<span class=\"hljs-attribute\">layout</span>\": <span class=\"hljs-value\"><span class=\"hljs-string\">\"Post\"</span></span>,\n    \"<span class=\"hljs-attribute\">date</span>\": <span class=\"hljs-value\"><span class=\"hljs-string\">\"2015-12-25\"</span>\n  </span>},\n]</code></pre>\n<p>As you can see, this file contains all pages, indexes and posts.</p>\n<p>The easiest way to get some data is to use the Statinamic helper:</p>\n<pre><code class=\"language-js\"><span class=\"hljs-comment\">// es6</span>\n<span class=\"hljs-keyword\">import</span> enhanceCollection <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"statinamic/lib/enhance-collection\"</span>\n\n// es5\nvar enhanceCollection = require(<span class=\"hljs-string\">\"statinamic/lib/enhance-collection\"</span>).default</code></pre>\n<p>With it, you can easily filter some pages anywhere in your components:</p>\n<pre><code class=\"language-js\">enhanceCollection(collection, {\n  filter: { layout: <span class=\"hljs-string\">\"Post\"</span> },\n  sort: <span class=\"hljs-string\">\"date\"</span>,\n  reverse: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-comment\">// limit: 1,</span>\n})</code></pre>\n<p>So, where does this collection come from? Here is an example of a component\nthat will display posts, sorted by date, and other pages (that are not a post)\nin a second list. You will see that the collection is retrieved from\n<a href=\"https://facebook.github.io/react/docs/context.html\">the context</a>.</p>\n<pre><code class=\"language-js\">import React, { Component } from \"react\"\nimport { PropTypes } from \"react\"\n\nimport Page from \"Page\"\n\nimport enhanceCollection from \"statinamic/lib/enhance-collection\"\n\nexport default class Collection extends Component {\n\n  static propTypes = {\n    head: PropTypes.object.isRequired,\n    body: PropTypes.string.isRequired,\n  };\n\n  static contextTypes = {\n    collection: PropTypes.array,\n  };\n\n  render() {\n    const {\n      collection,\n    } = this.context\n    return (\n      &lt;div&gt;\n        &lt;Page { ...this.props } /&gt;\n        {\n          Boolean(!collection || !collection.length) &amp;&amp;\n          &lt;div&gt;\n            { \"No entry\" }\n          &lt;/div&gt;\n        }\n        {\n          Boolean(collection &amp;&amp; collection.length) &amp;&amp;\n          &lt;div&gt;\n            { \"Posts (by date)\" }\n            &lt;ul&gt;\n            {\n              enhanceCollection(collection, {\n                filter: { layout: \"Post\" },\n                sort: \"date\",\n                reverse: true,\n                // limit: 1,\n              })\n              .map((item) =&gt; {\n                return (\n                  &lt;li key={ item.__url }&gt;\n                    &lt;a href={ item.__url }&gt;\n                      { item.title }\n                    &lt;/a&gt;\n                  &lt;/li&gt;\n                )\n              })\n            }\n            &lt;/ul&gt;\n\n            { \"Other pages\" }\n            &lt;ul&gt;\n            {\n              enhanceCollection(collection, {\n                filter: ({ layout }) =&gt; layout !== \"Post\",\n                sort: \"title\",\n              })\n              .map((item) =&gt; {\n                return (\n                  &lt;li key={ item.__url }&gt;\n                    &lt;a href={ item.__url }&gt;\n                      { item.title }\n                    &lt;/a&gt;\n                  &lt;/li&gt;\n                )\n              })\n            }\n            &lt;/ul&gt;\n          &lt;/div&gt;\n        }\n      &lt;/div&gt;\n    )\n  }\n}</code></pre>\n","rawBody":"\nBy default, Statinamic provides 2 things to help you work with collections:\n\n- it creates a file that contains all page metadata in a unique collection,\n- it provides a helper that helps you filter/sort/limit the collection.\n\n## Collection file\n\nHere is a simple collection example; note that the metadata defines the\nadditional fields `__filename` & `__url`.\n\n```json\n[\n  {\n    \"__filename\": \"index.md\",\n    \"__url\": \"/\",\n    \"title\": \"Awesome Website\"\n  },\n  {\n    \"__filename\": \"blog/index.md\",\n    \"__url\": \"/blog/\",\n    \"title\": \"Awesome blog\"\n  },\n  {\n    \"__filename\": \"blog/halloween.md\",\n    \"__url\": \"/blog/halloween/\",\n    \"title\": \"Awesome Halloween blog post\",\n    \"layout\": \"Post\",\n    \"date\": \"2015-10-31\"\n  },\n  {\n    \"__filename\": \"blog/xmas.md\",\n    \"__url\": \"/blog/xmas/\",\n    \"title\": \"Awesome Christmas blog post\",\n    \"layout\": \"Post\",\n    \"date\": \"2015-12-25\"\n  },\n]\n```\n\nAs you can see, this file contains all pages, indexes and posts.\n\nThe easiest way to get some data is to use the Statinamic helper:\n\n```js\n// es6\nimport enhanceCollection from \"statinamic/lib/enhance-collection\"\n\n// es5\nvar enhanceCollection = require(\"statinamic/lib/enhance-collection\").default\n```\n\nWith it, you can easily filter some pages anywhere in your components:\n\n```js\nenhanceCollection(collection, {\n  filter: { layout: \"Post\" },\n  sort: \"date\",\n  reverse: true,\n  // limit: 1,\n})\n```\n\nSo, where does this collection come from? Here is an example of a component\nthat will display posts, sorted by date, and other pages (that are not a post)\nin a second list. You will see that the collection is retrieved from\n[the context](https://facebook.github.io/react/docs/context.html).\n\n```js\nimport React, { Component } from \"react\"\nimport { PropTypes } from \"react\"\n\nimport Page from \"Page\"\n\nimport enhanceCollection from \"statinamic/lib/enhance-collection\"\n\nexport default class Collection extends Component {\n\n  static propTypes = {\n    head: PropTypes.object.isRequired,\n    body: PropTypes.string.isRequired,\n  };\n\n  static contextTypes = {\n    collection: PropTypes.array,\n  };\n\n  render() {\n    const {\n      collection,\n    } = this.context\n    return (\n      <div>\n        <Page { ...this.props } />\n        {\n          Boolean(!collection || !collection.length) &&\n          <div>\n            { \"No entry\" }\n          </div>\n        }\n        {\n          Boolean(collection && collection.length) &&\n          <div>\n            { \"Posts (by date)\" }\n            <ul>\n            {\n              enhanceCollection(collection, {\n                filter: { layout: \"Post\" },\n                sort: \"date\",\n                reverse: true,\n                // limit: 1,\n              })\n              .map((item) => {\n                return (\n                  <li key={ item.__url }>\n                    <a href={ item.__url }>\n                      { item.title }\n                    </a>\n                  </li>\n                )\n              })\n            }\n            </ul>\n\n            { \"Other pages\" }\n            <ul>\n            {\n              enhanceCollection(collection, {\n                filter: ({ layout }) => layout !== \"Post\",\n                sort: \"title\",\n              })\n              .map((item) => {\n                return (\n                  <li key={ item.__url }>\n                    <a href={ item.__url }>\n                      { item.title }\n                    </a>\n                  </li>\n                )\n              })\n            }\n            </ul>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n```\n","raw":"---\ntitle: How to use Collections in Statinamic\nincomplete: true\n---\n\nBy default, Statinamic provides 2 things to help you work with collections:\n\n- it creates a file that contains all page metadata in a unique collection,\n- it provides a helper that helps you filter/sort/limit the collection.\n\n## Collection file\n\nHere is a simple collection example; note that the metadata defines the\nadditional fields `__filename` & `__url`.\n\n```json\n[\n  {\n    \"__filename\": \"index.md\",\n    \"__url\": \"/\",\n    \"title\": \"Awesome Website\"\n  },\n  {\n    \"__filename\": \"blog/index.md\",\n    \"__url\": \"/blog/\",\n    \"title\": \"Awesome blog\"\n  },\n  {\n    \"__filename\": \"blog/halloween.md\",\n    \"__url\": \"/blog/halloween/\",\n    \"title\": \"Awesome Halloween blog post\",\n    \"layout\": \"Post\",\n    \"date\": \"2015-10-31\"\n  },\n  {\n    \"__filename\": \"blog/xmas.md\",\n    \"__url\": \"/blog/xmas/\",\n    \"title\": \"Awesome Christmas blog post\",\n    \"layout\": \"Post\",\n    \"date\": \"2015-12-25\"\n  },\n]\n```\n\nAs you can see, this file contains all pages, indexes and posts.\n\nThe easiest way to get some data is to use the Statinamic helper:\n\n```js\n// es6\nimport enhanceCollection from \"statinamic/lib/enhance-collection\"\n\n// es5\nvar enhanceCollection = require(\"statinamic/lib/enhance-collection\").default\n```\n\nWith it, you can easily filter some pages anywhere in your components:\n\n```js\nenhanceCollection(collection, {\n  filter: { layout: \"Post\" },\n  sort: \"date\",\n  reverse: true,\n  // limit: 1,\n})\n```\n\nSo, where does this collection come from? Here is an example of a component\nthat will display posts, sorted by date, and other pages (that are not a post)\nin a second list. You will see that the collection is retrieved from\n[the context](https://facebook.github.io/react/docs/context.html).\n\n```js\nimport React, { Component } from \"react\"\nimport { PropTypes } from \"react\"\n\nimport Page from \"Page\"\n\nimport enhanceCollection from \"statinamic/lib/enhance-collection\"\n\nexport default class Collection extends Component {\n\n  static propTypes = {\n    head: PropTypes.object.isRequired,\n    body: PropTypes.string.isRequired,\n  };\n\n  static contextTypes = {\n    collection: PropTypes.array,\n  };\n\n  render() {\n    const {\n      collection,\n    } = this.context\n    return (\n      <div>\n        <Page { ...this.props } />\n        {\n          Boolean(!collection || !collection.length) &&\n          <div>\n            { \"No entry\" }\n          </div>\n        }\n        {\n          Boolean(collection && collection.length) &&\n          <div>\n            { \"Posts (by date)\" }\n            <ul>\n            {\n              enhanceCollection(collection, {\n                filter: { layout: \"Post\" },\n                sort: \"date\",\n                reverse: true,\n                // limit: 1,\n              })\n              .map((item) => {\n                return (\n                  <li key={ item.__url }>\n                    <a href={ item.__url }>\n                      { item.title }\n                    </a>\n                  </li>\n                )\n              })\n            }\n            </ul>\n\n            { \"Other pages\" }\n            <ul>\n            {\n              enhanceCollection(collection, {\n                filter: ({ layout }) => layout !== \"Post\",\n                sort: \"title\",\n              })\n              .map((item) => {\n                return (\n                  <li key={ item.__url }>\n                    <a href={ item.__url }>\n                      { item.title }\n                    </a>\n                  </li>\n                )\n              })\n            }\n            </ul>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n```\n","__filename":"docs/usage/collections.md","__url":"/docs/usage/collections/","__resourceUrl":"/docs/usage/collections/index.html","__dataUrl":"/docs/usage/collections/index.html.3bd196998439514c7bfa25560daffa33.json"}