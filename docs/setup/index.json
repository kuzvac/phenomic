{"head":{"title":"How to setup Statinamic"},"body":"<p>Statinamic uses\n<a href=\"http://nodejs.org/\">Node.js</a>/<a href=\"http://npmjs.com/\">npm</a>\nand requires a minimal boilerplate, in order to provide you some\nflexibility.<br>\nHere is a quick way to setup the boilerplate in a minute :</p>\n<h2 id=\"create-a-new-folder\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-folder\">#</a> Create a new folder</h2>\n<p>That’s an easy step.</p>\n<pre><code class=\"language-console\">$ DIR=your-website-folder\n$ mkdir <span class=\"hljs-variable\">$DIR</span> &amp;&amp; cd <span class=\"hljs-variable\">$DIR</span></code></pre>\n<p>You can also create a empty <code>package.json</code> file in it that we are going to fill.</p>\n<pre><code class=\"language-console\">$ touch <span class=\"hljs-keyword\">package</span>.json\n[$ [xdg-]<span class=\"hljs-keyword\">open</span> <span class=\"hljs-keyword\">package</span>.json]</code></pre>\n<h2 id=\"fill-the-package-json\"><a class=\"markdownIt-Anchor\" href=\"#fill-the-package-json\">#</a> Fill the <code>package.json</code></h2>\n<p>You can copy the following <code>package.json</code> content.</p>\n<p><strong>Remember to adjust some values :</strong></p>\n<ul>\n<li><code>name</code></li>\n<li><code>homepage</code></li>\n<li><code>statinamic</code> section</li>\n</ul>\n<p>(And before you ask: <code>npm init</code> won’t really help us in our case).</p>\n<pre><code class=\"language-json\">{\n  \"<span class=\"hljs-attribute\">private</span>\": <span class=\"hljs-value\"><span class=\"hljs-literal\">true</span></span>,\n  \"<span class=\"hljs-attribute\">name</span>\": <span class=\"hljs-value\"><span class=\"hljs-string\">\"YOUR-NAME-that-might-be-used-in-some-title-tags\"</span></span>,\n  \"<span class=\"hljs-attribute\">homepage</span>\": <span class=\"hljs-value\"><span class=\"hljs-string\">\"http://YOUR.HOSTNAME/your-base-url-if-needed/\"</span></span>,\n\n  \"<span class=\"hljs-attribute\">scripts</span>\": <span class=\"hljs-value\">{\n    \"<span class=\"hljs-attribute\">start</span>\": <span class=\"hljs-value\"><span class=\"hljs-string\">\"babel-node scripts/build --server --open --dev\"</span></span>,\n    \"<span class=\"hljs-attribute\">build</span>\": <span class=\"hljs-value\"><span class=\"hljs-string\">\"babel-node scripts/build --static --production\"</span>\n  </span>}</span>,\n\n  \"<span class=\"hljs-attribute\">statinamic</span>\": <span class=\"hljs-value\">{\n    \"<span class=\"hljs-attribute\">CNAME</span>\": <span class=\"hljs-value\"><span class=\"hljs-literal\">true</span>\n  </span>}</span>,\n\n  \"<span class=\"hljs-attribute\">babel</span>\": <span class=\"hljs-value\">{\n    \"<span class=\"hljs-attribute\">presets</span>\": <span class=\"hljs-value\">[\n      <span class=\"hljs-string\">\"react\"</span>,\n      <span class=\"hljs-string\">\"es2015\"</span>,\n      <span class=\"hljs-string\">\"stage-1\"</span>\n    ]</span>,\n    \"<span class=\"hljs-attribute\">env</span>\": <span class=\"hljs-value\">{\n      \"<span class=\"hljs-attribute\">development</span>\": <span class=\"hljs-value\">{\n        \"<span class=\"hljs-attribute\">presets</span>\": <span class=\"hljs-value\">[\n          <span class=\"hljs-string\">\"react-hmre\"</span>\n        ]\n      </span>}\n    </span>}\n  </span>}</span>,\n\n  \"<span class=\"hljs-attribute\">eslintConfig</span>\": <span class=\"hljs-value\">{\n    \"<span class=\"hljs-attribute\">parser</span>\": <span class=\"hljs-value\"><span class=\"hljs-string\">\"babel-eslint\"</span></span>,\n    \"<span class=\"hljs-attribute\">extends</span>\": <span class=\"hljs-value\">[\n      <span class=\"hljs-string\">\"eslint-config-i-am-meticulous/react\"</span>\n    ]\n  </span>}\n</span>}</code></pre>\n<p><em>Check out <a href=\"../usage/configuration/\">Configuration</a> for more information about\nthe configuration options.</em></p>\n<p>When you got this <code>package.json</code> right, you can run the following:</p>\n<pre><code class=\"language-console\">$ npm install --save-dev statinamic\n$ <span class=\"hljs-preprocessor\">cp</span> -R ./node_modules/statinamic/<span class=\"hljs-keyword\">boilerplate/ </span>.\n$ ./node_modules/.<span class=\"hljs-keyword\">bin/statinamic </span>setup</code></pre>\n<p>The setup script should take a moment to install some peer dependencies.\nWhy <code>peerDependencies</code>? That’s an interesting question so let’s discuss about\nthat: by using <code>peerDependencies</code>, we ensure that <em>you</em> control the dependencies\nyou are using. This way you are totally aware of what you use and are not locked\nin any way.\nAnd if you don’t want to have to think about this, no big deal, dependencies are\nprobably already installed as you read this.</p>\n<p>Now it’s time to…</p>\n<h2 id=\"start-the-engine\"><a class=\"markdownIt-Anchor\" href=\"#start-the-engine\">#</a> START THE engine</h2>\n<pre><code class=\"language-console\">$ <span class=\"hljs-built_in\">npm</span> start</code></pre>\n<p>It’s that simple.</p>\n<p>This command call the <code>start</code> command from the <code>scripts</code> section of your\n<code>package.json</code>.\nAs you can see this will execute a Node.js script that will load the\nconfiguration (<code>scripts/build.js</code>) and run Statinamic in development mode.</p>\n<p>Now just wait for you browser to show up (yes this development mode should open\nyour development server in your favorite browser).</p>\n<p>When you get the hello world, you will be able to <a href=\"../usage/\">start hacking!</a></p>\n","rawBody":"\nStatinamic uses\n[Node.js](http://nodejs.org/)/[npm](http://npmjs.com/)\nand requires a minimal boilerplate, in order to provide you some\nflexibility.  \nHere is a quick way to setup the boilerplate in a minute :\n\n## Create a new folder\n\nThat's an easy step.\n\n```console\n$ DIR=your-website-folder\n$ mkdir $DIR && cd $DIR\n```\n\nYou can also create a empty `package.json` file in it that we are going to fill.\n\n```console\n$ touch package.json\n[$ [xdg-]open package.json]\n```\n\n## Fill the `package.json`\n\nYou can copy the following `package.json` content.\n\n**Remember to adjust some values :**\n- `name`\n- `homepage`\n- `statinamic` section\n\n(And before you ask: `npm init` won't really help us in our case).\n\n```json\n{\n  \"private\": true,\n  \"name\": \"YOUR-NAME-that-might-be-used-in-some-title-tags\",\n  \"homepage\": \"http://YOUR.HOSTNAME/your-base-url-if-needed/\",\n\n  \"scripts\": {\n    \"start\": \"babel-node scripts/build --server --open --dev\",\n    \"build\": \"babel-node scripts/build --static --production\"\n  },\n\n  \"statinamic\": {\n    \"CNAME\": true\n  },\n\n  \"babel\": {\n    \"presets\": [\n      \"react\",\n      \"es2015\",\n      \"stage-1\"\n    ],\n    \"env\": {\n      \"development\": {\n        \"presets\": [\n          \"react-hmre\"\n        ]\n      }\n    }\n  },\n\n  \"eslintConfig\": {\n    \"parser\": \"babel-eslint\",\n    \"extends\": [\n      \"eslint-config-i-am-meticulous/react\"\n    ]\n  }\n}\n```\n\n_Check out [Configuration](../usage/configuration/) for more information about\nthe configuration options._\n\nWhen you got this `package.json` right, you can run the following:\n\n```console\n$ npm install --save-dev statinamic\n$ cp -R ./node_modules/statinamic/boilerplate/ .\n$ ./node_modules/.bin/statinamic setup\n```\n\nThe setup script should take a moment to install some peer dependencies.\nWhy `peerDependencies`? That's an interesting question so let's discuss about\nthat: by using `peerDependencies`, we ensure that _you_ control the dependencies\nyou are using. This way you are totally aware of what you use and are not locked\nin any way.\nAnd if you don't want to have to think about this, no big deal, dependencies are\nprobably already installed as you read this.\n\nNow it's time to...\n\n## START THE engine\n\n```console\n$ npm start\n```\n\nIt's that simple.\n\nThis command call the `start` command from the `scripts` section of your\n`package.json`.\nAs you can see this will execute a Node.js script that will load the\nconfiguration (`scripts/build.js`) and run Statinamic in development mode.\n\nNow just wait for you browser to show up (yes this development mode should open\nyour development server in your favorite browser).\n\nWhen you get the hello world, you will be able to [start hacking!](../usage/)\n","raw":"---\ntitle: How to setup Statinamic\n---\n\nStatinamic uses\n[Node.js](http://nodejs.org/)/[npm](http://npmjs.com/)\nand requires a minimal boilerplate, in order to provide you some\nflexibility.  \nHere is a quick way to setup the boilerplate in a minute :\n\n## Create a new folder\n\nThat's an easy step.\n\n```console\n$ DIR=your-website-folder\n$ mkdir $DIR && cd $DIR\n```\n\nYou can also create a empty `package.json` file in it that we are going to fill.\n\n```console\n$ touch package.json\n[$ [xdg-]open package.json]\n```\n\n## Fill the `package.json`\n\nYou can copy the following `package.json` content.\n\n**Remember to adjust some values :**\n- `name`\n- `homepage`\n- `statinamic` section\n\n(And before you ask: `npm init` won't really help us in our case).\n\n```json\n{\n  \"private\": true,\n  \"name\": \"YOUR-NAME-that-might-be-used-in-some-title-tags\",\n  \"homepage\": \"http://YOUR.HOSTNAME/your-base-url-if-needed/\",\n\n  \"scripts\": {\n    \"start\": \"babel-node scripts/build --server --open --dev\",\n    \"build\": \"babel-node scripts/build --static --production\"\n  },\n\n  \"statinamic\": {\n    \"CNAME\": true\n  },\n\n  \"babel\": {\n    \"presets\": [\n      \"react\",\n      \"es2015\",\n      \"stage-1\"\n    ],\n    \"env\": {\n      \"development\": {\n        \"presets\": [\n          \"react-hmre\"\n        ]\n      }\n    }\n  },\n\n  \"eslintConfig\": {\n    \"parser\": \"babel-eslint\",\n    \"extends\": [\n      \"eslint-config-i-am-meticulous/react\"\n    ]\n  }\n}\n```\n\n_Check out [Configuration](../usage/configuration/) for more information about\nthe configuration options._\n\nWhen you got this `package.json` right, you can run the following:\n\n```console\n$ npm install --save-dev statinamic\n$ cp -R ./node_modules/statinamic/boilerplate/ .\n$ ./node_modules/.bin/statinamic setup\n```\n\nThe setup script should take a moment to install some peer dependencies.\nWhy `peerDependencies`? That's an interesting question so let's discuss about\nthat: by using `peerDependencies`, we ensure that _you_ control the dependencies\nyou are using. This way you are totally aware of what you use and are not locked\nin any way.\nAnd if you don't want to have to think about this, no big deal, dependencies are\nprobably already installed as you read this.\n\nNow it's time to...\n\n## START THE engine\n\n```console\n$ npm start\n```\n\nIt's that simple.\n\nThis command call the `start` command from the `scripts` section of your\n`package.json`.\nAs you can see this will execute a Node.js script that will load the\nconfiguration (`scripts/build.js`) and run Statinamic in development mode.\n\nNow just wait for you browser to show up (yes this development mode should open\nyour development server in your favorite browser).\n\nWhen you get the hello world, you will be able to [start hacking!](../usage/)\n","__filename":"docs/setup.md","__url":"/statinamic/docs/setup/"}