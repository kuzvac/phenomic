{"head":{"title":"How to setup Statinamic","description":"Statinamic uses\nNode.js/npm\nand requires a minimal boilerplate, in order to provide you some\nflexibility.  \nHere is a quick way to setup the…"},"body":"<p>Statinamic uses\n<a href=\"http://nodejs.org/\">Node.js</a>/<a href=\"http://npmjs.com/\">npm</a>\nand requires a minimal boilerplate, in order to provide you some\nflexibility.<br>\nHere is a quick way to setup the boilerplate in a minute :</p>\n<h2 id=\"create-a-new-folder\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-folder\">#</a> Create a new folder</h2>\n<p>That’s an easy step.</p>\n<pre><code class=\"language-console\">$ DIR=your-website-folder\n$ mkdir <span class=\"hljs-variable\">$DIR</span> &amp;&amp; cd <span class=\"hljs-variable\">$DIR</span></code></pre>\n<h2 id=\"setup-boilerplate\"><a class=\"markdownIt-Anchor\" href=\"#setup-boilerplate\">#</a> Setup boilerplate</h2>\n<pre><code class=\"language-console\">$ <span class=\"hljs-built_in\">npm</span> init --force\n$ <span class=\"hljs-built_in\">npm</span> install statinamic\n$ .<span class=\"hljs-regexp\">/node_modules/</span>.bin/statinamic setup</code></pre>\n<p>After answer some questions, you are setup with <strong>Statinamic</strong>.</p>\n<p>Why run <code>npm init</code> with <code>force</code> option ?\nnpm needs a valid <code>package.json</code> file to work.\nWe are gonna overwrite this file so <code>force</code> option is a good choice.</p>\n<p><em>Tip:</em> You can open <code>package.json</code> and adjust some values to fit your needs.</p>\n<p><em>Check out <a href=\"../usage/configuration/\">Configuration</a> for more information about\nthe configuration options.</em></p>\n<p>When you are done. Run</p>\n<pre><code class=\"language-console\">$ npm <span class=\"hljs-keyword\">install</span></code></pre>\n<p>npm will install some peer dependencies for you.</p>\n<p>Why <code>peerDependencies</code>? That’s an interesting question so let’s discuss about\nthat: by using <code>peerDependencies</code>, we ensure that <em>you</em> control the dependencies\nyou are using. This way you are totally aware of what you use and are not locked\nin any way.\nAnd if you don’t want to have to think about this, no big deal, dependencies are\nprobably already installed as you read this.</p>\n<p>Now it’s time to…</p>\n<h2 id=\"start-the-engine\"><a class=\"markdownIt-Anchor\" href=\"#start-the-engine\">#</a> START THE engine</h2>\n<pre><code class=\"language-console\">$ <span class=\"hljs-built_in\">npm</span> start</code></pre>\n<p>It’s that simple.</p>\n<p>This command call the <code>start</code> command from the <code>scripts</code> section of your\n<code>package.json</code>.\nAs you can see this will execute a Node.js script that will load the\nconfiguration (<code>scripts/build.js</code>) and run Statinamic in development mode.</p>\n<p>Now just wait for you browser to show up (yes this development mode should open\nyour development server in your favorite browser).</p>\n<p>When you get the hello world, you will be able to <a href=\"../usage/\">start hacking!</a></p>\n","rawBody":"\nStatinamic uses\n[Node.js](http://nodejs.org/)/[npm](http://npmjs.com/)\nand requires a minimal boilerplate, in order to provide you some\nflexibility.  \nHere is a quick way to setup the boilerplate in a minute :\n\n## Create a new folder\n\nThat's an easy step.\n\n```console\n$ DIR=your-website-folder\n$ mkdir $DIR && cd $DIR\n```\n\n## Setup boilerplate\n\n```console\n$ npm init --force\n$ npm install statinamic\n$ ./node_modules/.bin/statinamic setup\n```\n\nAfter answer some questions, you are setup with **Statinamic**.\n\nWhy run `npm init` with `force` option ?\nnpm needs a valid `package.json` file to work.\nWe are gonna overwrite this file so `force` option is a good choice.\n\n_Tip:_ You can open `package.json` and adjust some values to fit your needs.\n\n_Check out [Configuration](../usage/configuration/) for more information about\nthe configuration options._\n\nWhen you are done. Run\n\n```console\n$ npm install\n```\n\nnpm will install some peer dependencies for you.\n\nWhy `peerDependencies`? That's an interesting question so let's discuss about\nthat: by using `peerDependencies`, we ensure that _you_ control the dependencies\nyou are using. This way you are totally aware of what you use and are not locked\nin any way.\nAnd if you don't want to have to think about this, no big deal, dependencies are\nprobably already installed as you read this.\n\nNow it's time to...\n\n## START THE engine\n\n```console\n$ npm start\n```\n\nIt's that simple.\n\nThis command call the `start` command from the `scripts` section of your\n`package.json`.\nAs you can see this will execute a Node.js script that will load the\nconfiguration (`scripts/build.js`) and run Statinamic in development mode.\n\nNow just wait for you browser to show up (yes this development mode should open\nyour development server in your favorite browser).\n\nWhen you get the hello world, you will be able to [start hacking!](../usage/)\n","raw":"---\ntitle: How to setup Statinamic\n---\n\nStatinamic uses\n[Node.js](http://nodejs.org/)/[npm](http://npmjs.com/)\nand requires a minimal boilerplate, in order to provide you some\nflexibility.  \nHere is a quick way to setup the boilerplate in a minute :\n\n## Create a new folder\n\nThat's an easy step.\n\n```console\n$ DIR=your-website-folder\n$ mkdir $DIR && cd $DIR\n```\n\n## Setup boilerplate\n\n```console\n$ npm init --force\n$ npm install statinamic\n$ ./node_modules/.bin/statinamic setup\n```\n\nAfter answer some questions, you are setup with **Statinamic**.\n\nWhy run `npm init` with `force` option ?\nnpm needs a valid `package.json` file to work.\nWe are gonna overwrite this file so `force` option is a good choice.\n\n_Tip:_ You can open `package.json` and adjust some values to fit your needs.\n\n_Check out [Configuration](../usage/configuration/) for more information about\nthe configuration options._\n\nWhen you are done. Run\n\n```console\n$ npm install\n```\n\nnpm will install some peer dependencies for you.\n\nWhy `peerDependencies`? That's an interesting question so let's discuss about\nthat: by using `peerDependencies`, we ensure that _you_ control the dependencies\nyou are using. This way you are totally aware of what you use and are not locked\nin any way.\nAnd if you don't want to have to think about this, no big deal, dependencies are\nprobably already installed as you read this.\n\nNow it's time to...\n\n## START THE engine\n\n```console\n$ npm start\n```\n\nIt's that simple.\n\nThis command call the `start` command from the `scripts` section of your\n`package.json`.\nAs you can see this will execute a Node.js script that will load the\nconfiguration (`scripts/build.js`) and run Statinamic in development mode.\n\nNow just wait for you browser to show up (yes this development mode should open\nyour development server in your favorite browser).\n\nWhen you get the hello world, you will be able to [start hacking!](../usage/)\n","__filename":"docs/setup.md","__url":"/docs/setup/","__resourceUrl":"/docs/setup/index.html","__dataUrl":"/docs/setup/index.html.1ad3f025044052794babb6b44ac7ebe4.json"}